full_data_withTimeRating=read.csv("종합 선수 데이터+평점&출전시간 포함(11월28일 크롤링).csv")
full_data_withTimeRating<-full_data_withTimeRating[,-c(1)]
colnames(full_data_withTimeRating)<-c("name","age","marketvalue(€)",'19/20 league playing time(min)','19/20 league mean rating')
View(full_data_withTimeRating)
typeof(full_data_withTimeRating$`marketvalue(€)`)
typeof(full_data_withTimeRating$age)
typeof(full_data_withTimeRating$`19/20 league playing time(min)`)
full_data_withTimeRating=read.csv("종합 선수 데이터+평점&출전시간 포함(11월28일 크롤링).csv")
full_data_withTimeRating<-full_data_withTimeRating[,-c(1)]
colnames(full_data_withTimeRating)<-c("name","age","marketvalue(€)",'19/20 league playing time(min)','19/20 league mean rating')
typeof(full_data_withTimeRating$`19/20 league playing time(min)`)
full_data_withTimeRating=read.csv("종합 선수 데이터+평점&출전시간 포함(11월28일 크롤링).csv")
full_data_withTimeRating<-full_data_withTimeRating[,-c(1)]
colnames(full_data_withTimeRating)<-c("name","age","marketvalue(€)",'19/20 league playing time(min)','19/20 league mean rating')
a<-3
typeof(a)
a<-2.5
typeof(a)
a<-2.523213
typeof(a)
a<-as.character(a)
a
a<-as.double(a)
a
full_data_withTimeRating$`19/20 league playing time(min)`<-as.integer(full_data_withTimeRating$`19/20 league playing time(min)`)
full_data_withTimeRating$`19/20 league playing time(min)`<-as.integer(full_data_withTimeRating$`19/20 league playing time(min)`)
typeof(full_data_withTimeRating$`19/20 league playing time(min)`)
full_data_withTimeRating$`19/20 league mean rating`<-as.double(full_data_withTimeRating$`19/20 league mean rating`)
full_data_withTimeRating$`19/20 league mean rating`<-as.double(full_data_withTimeRating$`19/20 league mean rating`)
typeof(full_data_withTimeRating$`19/20 league mean rating`)
full_data_withTimeRating$`19/20 league playing time(min)`[1]
full_data_withTimeRating$`19/20 league playing time(min)`[1]+2
full_data_withTimeRating$`19/20 league mean rating`[1]
full_data_withTimeRating$`19/20 league mean rating`[1]+1
rm(a)
typeof(full_data_withTimeRating$`marketvalue(€)`)
full_data_withTimeRating$`marketvalue(€)`<-as.double(full_data_withTimeRating$`marketvalue(€)`)
full_data_withTimeRating$`marketvalue(€)`<-as.double(full_data_withTimeRating$`marketvalue(€)`)
typeof(full_data_withTimeRating$`marketvalue(€)`)
typeof(full_data_withTimeRating$`marketvalue(€)`)
full_data_withTimeRating=read.csv("종합 선수 데이터+평점&출전시간 포함(11월28일 크롤링).csv")
full_data_withTimeRating<-full_data_withTimeRating[,-c(1)]
colnames(full_data_withTimeRating)<-c("name","age","marketvalue(€)",'19/20 league playing time(min)','19/20 league mean rating')
full_data_withTimeRating$`19/20 league playing time(min)`<-as.integer(full_data_withTimeRating$`19/20 league playing time(min)`)
typeof(full_data_withTimeRating$`19/20 league playing time(min)`)
full_data_withTimeRating$`19/20 league mean rating`<-as.double(full_data_withTimeRating$`19/20 league mean rating`)
typeof(full_data_withTimeRating$`19/20 league playing time(min)`)
typeof(full_data_withTimeRating$`19/20 league mean rating`)
full_data_withTimeRating$`19/20 league mean rating`[1]+1
typeof(full_data_withTimeRating$`marketvalue(€)`)
typeof(full_data_withTimeRating$`marketvalue(€)`)
full_data_withTimeRating=read.csv("종합 선수 데이터+평점&출전시간 수기 완료(11월28일 크롤링)+Euro&m제거.csv")
full_data_withTimeRating<-full_data_withTimeRating[,-c(1)]
colnames(full_data_withTimeRating)<-c("name","age","marketvalue(€)",'19/20 league playing time(min)','19/20 league mean rating')
full_data_withTimeRating$`19/20 league playing time(min)`<-as.integer(full_data_withTimeRating$`19/20 league playing time(min)`)
typeof(full_data_withTimeRating$`19/20 league playing time(min)`)
full_data_withTimeRating$`19/20 league mean rating`<-as.double(full_data_withTimeRating$`19/20 league mean rating`)
typeof(full_data_withTimeRating$`19/20 league mean rating`)
full_data_withTimeRating$`19/20 league mean rating`[1]+1
typeof(full_data_withTimeRating$`marketvalue(€)`)
typeof(full_data_withTimeRating$`marketvalue(€)`)
colnames(full_data_withTimeRating)<-c("name","age","marketvalue(€)(m)",'19/20 league playing time(min)','19/20 league mean rating')
colnames(full_data_withTimeRating)<-c(name,"age","marketvalue(€)(m)",'19/20 league playing time(min)','19/20 league mean rating')
cor(data=full_data_withTimeRating,x=`marketvalue(€)(m)`,y='19/20 league mean rating')
cor(x=full_data_withTimeRating$`marketvalue(€)(m)`,y=full_data_withTimeRating$'19/20 league mean rating')
cor(x=full_data_withTimeRating$`marketvalue(€)(m)`,y=full_data_withTimeRating$`19/20 league mean rating`)
full_data_withTimeRating$`marketvalue(€)(m)`
summary(full_data_withTimeRating$`marketvalue(€)(m)`)
summary(full_data_withTimeRating$`19/20 league mean rating`)
cor(x=full_data_withTimeRating$`marketvalue(€)(m)`,y=full_data_withTimeRating$`19/20 league mean rating`,rm=true)
cor(x=full_data_withTimeRating$`marketvalue(€)(m)`,y=full_data_withTimeRating$`19/20 league mean rating`,rm=True)
full_data_withTimeRating<-na.omit(full_data_withTimeRating)
cor(x=full_data_withTimeRating$`marketvalue(€)(m)`,y=full_data_withTimeRating$`19/20 league mean rating`)
ggplot(x=full_data_withTimeRating$`marketvalue(€)(m)`,y=full_data_withTimeRating$`19/20 league mean rating`)
plot(x=full_data_withTimeRating$`marketvalue(€)(m)`,y=full_data_withTimeRating$`19/20 league mean rating`)
attach(full_data_withTimeRating)
plot(`marketvalue(€)(m)`,name)
plot(`marketvalue(€)(m)`,`19/20 league mean rating`)
cor(`marketvalue(€)(m)`,`19/20 league mean rating`)
plot(`marketvalue(€)(m)`,`19/20 league playing time`)
plot(`marketvalue(€)(m)`,`19/20 league playing time`)
plot(`marketvalue(€)(m)`,`19/20 league playing time(min)`)
cor(`marketvalue(€)(m)`,`19/20 league playing time(min)`)
plot(`marketvalue(€)(m)`,`age`)
cor(`marketvalue(€)(m)`,`age`)
plot(`19/20 league playing time(min)`,`marketvalue(€)(m)`)
plot(`19/20 league mean rating`,`marketvalue(€)(m)`)
cor(`19/20 league mean rating`,`marketvalue(€)(m)`)
cor(`19/20 league playing time(min)`,`marketvalue(€)(m)`)
cor(`age`,`marketvalue(€)(m)`)
#...상관계수가 너무나 낮게 나오다 세가지 가설에서 모두..ㅜㅜ
plot(`marketvalue(€)(m)`,`19/20 league mean rating`,xlim=100)
#...상관계수가 너무나 낮게 나오다 세가지 가설에서 모두..ㅜㅜ
plot(`marketvalue(€)(m)`,`19/20 league mean rating`)+xlim(100)
install.packages("ggplot2")
library(ggplot)
install.packages("ggplot2")
library(ggplot)
#...상관계수가 너무나 낮게 나오다 세가지 가설에서 모두..ㅜㅜ
install.packages("ggplot2")
library(ggplot2)
ggplot(`marketvalue(€)(m)`,`19/20 league mean rating`)
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
ggplot(`marketvalue(€)(m)`,`19/20 league mean rating`)
library(ggplot2)
ggplot(`marketvalue(€)(m)`,`19/20 league mean rating`)
ggplot(x=`marketvalue(€)(m)`,y=`19/20 league mean rating`)
library(ggplot2)
ggplot(aes(x=`marketvalue(€)(m)`,y=`19/20 league mean rating`))
ggplot(aes(x=`marketvalue(€)(m)`,y=`19/20 league mean rating`))
ggplot(aes(x=`marketvalue(€)(m)`,y=`19/20 league mean rating`))
ggplot(aes(x=`marketvalue(€)(m)`,y=`19/20 league mean rating`))
ggplot(aes(x=`marketvalue(€)(m)`,y=`19/20 league mean rating`))
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
ggplot(aes(x=`marketvalue(€)(m)`,y=`19/20 league mean rating`))
full_data_withTimeRating=read.csv("종합 선수 데이터+평점&출전시간 수기 완료(11월28일 크롤링)+Euro&m제거.csv")
full_data_withTimeRating<-full_data_withTimeRating[,-c(1)]
colnames(full_data_withTimeRating)<-c('name',"age","marketvalue(€)",'19/20 league playing time(min)','19/20 league mean rating')
full_data_withTimeRating$`19/20 league playing time(min)`<-as.integer(full_data_withTimeRating$`19/20 league playing time(min)`)
typeof(full_data_withTimeRating$`19/20 league playing time(min)`)
full_data_withTimeRating$`19/20 league mean rating`<-as.double(full_data_withTimeRating$`19/20 league mean rating`)
typeof(full_data_withTimeRating$`19/20 league mean rating`)
typeof(full_data_withTimeRating$`marketvalue(€)`)
full_data_withTimeRating$`marketvalue(€)`<-full_data_withTimeRating$`marketvalue(€)`*1000000
full_data_withTimeRating$`19/20 league playing time(min)`<-ifelse(full_data_withTimeRating$`19/20 league playing time(min)`<1000,NA,full_data_withTimeRating$`19/20 league playing time(min)`)
sum(is.na(full_data_withTimeRating))
full_data_withTimeRating<-na.omit(full_data_withTimeRating)
summary(full_data_withTimeRating)
sum(is.na(full_data_withTimeRating))
View(full_data_withTimeRating)
full_data_withTimeRating=read.csv("종합 선수 데이터+평점&출전시간 수기 완료(11월28일 크롤링)+Euro&m제거.csv")
full_data_withTimeRating<-full_data_withTimeRating[,-c(1)]
colnames(full_data_withTimeRating)<-c('name',"age","marketvalue(€)",'19/20 league playing time(min)','19/20 league mean rating')
full_data_withTimeRating$`19/20 league playing time(min)`<-as.integer(full_data_withTimeRating$`19/20 league playing time(min)`)
typeof(full_data_withTimeRating$`19/20 league playing time(min)`)
full_data_withTimeRating$`19/20 league mean rating`<-as.double(full_data_withTimeRating$`19/20 league mean rating`)
typeof(full_data_withTimeRating$`19/20 league mean rating`)
typeof(full_data_withTimeRating$`marketvalue(€)`)
full_data_withTimeRating$`marketvalue(€)`<-full_data_withTimeRating$`marketvalue(€)`*1000000
full_data_withTimeRating$`19/20 league playing time(min)`<-ifelse(full_data_withTimeRating$`19/20 league playing time(min)`<1000,NA,full_data_withTimeRating$`19/20 league playing time(min)`)
sum(is.na(full_data_withTimeRating))
full_data_withTimeRating=read.csv("종합 선수 데이터+평점&출전시간 수기 완료(11월28일 크롤링)+Euro&m제거.csv")
full_data_withTimeRating<-full_data_withTimeRating[,-c(1)]
colnames(full_data_withTimeRating)<-c('name',"age","marketvalue(€)",'19/20 league playing time(min)','19/20 league mean rating')
full_data_withTimeRating$`19/20 league playing time(min)`<-as.integer(full_data_withTimeRating$`19/20 league playing time(min)`)
typeof(full_data_withTimeRating$`19/20 league playing time(min)`)
full_data_withTimeRating$`19/20 league mean rating`<-as.double(full_data_withTimeRating$`19/20 league mean rating`)
typeof(full_data_withTimeRating$`19/20 league mean rating`)
typeof(full_data_withTimeRating$`marketvalue(€)`)
full_data_withTimeRating$`marketvalue(€)`<-full_data_withTimeRating$`marketvalue(€)`*1000000
sum(is.na(full_data_withTimeRating))
summary(is.na(full_data_withTimeRating))
full_data_withTimeRating$`19/20 league playing time(min)`<-ifelse(full_data_withTimeRating$`19/20 league playing time(min)`<1000,NA,full_data_withTimeRating$`19/20 league playing time(min)`)
full_data_withTimeRating<-na.omit(full_data_withTimeRating)
install.packages("ggplot2")
library(ggplot2)
install.packages("dplyr")
library(dplyr)
install.packages("plotly")
library(plotly)
install.packages("dplyr")
plot(full_data_withTimeRating[,2:5])
g1<-ggplot(data=full_data_withTimeRating ,aes(y=`marketvalue(€)`, x=`19/20 league mean rating`))+geom_point()
ggplotly(g1)
plot(full_data_withTimeRating[,2:5])
corrplot(c)
install.packages("corrplot")
library(corrplot)
c<-cor(full_data_withTimeRating[,2:5])
corrplot(c)
corrplot(c)
corrplot(c)
c
plot(full_data_withTimeRating[,2:5])
corrplot(c)
c
c
cor(full_data_withTimeRating[,2:5])
attach(full_data_withTimeRating)
cor.test(`19/20 league mean rating`,`marketvalue(€)`)
cor.test(`19/20 league playing time(min)`,`marketvalue(€)`)
cor.test(`age`,`marketvalue(€)`)
cor.test(`age`,`marketvalue(€)`)
cor.test(`age`,`marketvalue(€)`,confint(.1))
cor.test(`age`,`marketvalue(€)`,conf.leve1=.9)
cor.test(`age`,`marketvalue(€)`,conf.leve1=.95)
cor.test(`age`,`marketvalue(€)`,conf.leve1=.90)
cor.test(`19/20 league playing time(min)`,`marketvalue(€)`)
cor.test(`age`,`marketvalue(€)`)
#가설3. (지난 시즌 출전시간이 많으면 평균 평점이 높을 것이다.)
desc_playing<-full_data_withTimeRating%>%arrange(desc(`19/20 league playing time(min)`))
p_over<-desc_playing$`19/20 league playing time(min)`[1:218]
p_under<-desc_playing$`19/20 league playing time(min)`[219:436]
var.test(p_over, p_under)
#가설2.시장가치로 정렬되어 반으로 나뉜 두 그룹의 지난시즌 평균 평점에는 차이가 있을 것이다. (시장가치가 높으면 지난 시즌 평균 평점이 높을 것이다.)
r_over <- full_data_withTimeRating$`19/20 league mean rating`[1:218]
r_under<- full_data_withTimeRating$`19/20 league mean rating`[219:436]
var.test(r_over,r_under)
p_over<-desc_playing$`marketvalue(€)`[1:218]
p_under<-desc_playing$`marketvalue(€)`[219:436]
var.test(p_over, p_under)
var.test(r_over,r_under)
var.test(p_over, p_under)
t.test(p_over,p_under,paired=True, var.equal=true)
t.test(p_over,p_under,paired=TRUE, var.equal=true)
t.test(p_over,p_under,paired=FALSE, var.equal=TRUE)
desc_rating<-full_data_withTimeRating%>%arrange(desc(`19/20 league mean rating`))
mv_over<-desc_rating$`marketvalue(€)`[1:218]
mv_under<-desc_rating$`marketvalue(€)`[219:436]
var.test(mv_over,mv_under)
t.test(mv_over,mv_under,paired=FALSE, var.equal=FALSE)
t.test(r_over,r_under,paired=FALSE, var.equal=FALSE)
t.test(p_over,p_under,paired=FALSE, var.equal=TRUE)
cor(`19/20 league playing time(min)`,`marketvalue(€)`)
cor.test(`19/20 league mean rating`,`marketvalue(€)`)
cor.test(`19/20 league playing time(min)`,`marketvalue(€)`)
c
c
cor(`age`,`19/20 league mean rating`)
View(desc_playing)
View(desc_playing)
cor.test(`age`,`19/20 league mean rating`)
#가설2.시장가치로 정렬되어 반으로 나뉜 두 그룹의 지난시즌 평균 평점에는 차이가 있을 것이다. (시장가치가 높으면 지난 시즌 평균 평점이 높을 것이다.)
r_over <- full_data_withTimeRating$`19/20 league mean rating`[1:218]
r_under<- full_data_withTimeRating$`19/20 league mean rating`[219:436]
full_data_withTimeRating=read.csv("종합 선수 데이터+평점&출전시간 수기 완료(11월28일 크롤링)+Euro&m제거.csv")
full_data_withTimeRating<-full_data_withTimeRating[,-c(1)]
colnames(full_data_withTimeRating)<-c('name',"age","marketvalue(€)(M)",'19/20 league playing time(min)','19/20 league mean rating')
full_data_withTimeRating$`19/20 league playing time(min)`<-as.integer(full_data_withTimeRating$`19/20 league playing time(min)`)
typeof(full_data_withTimeRating$`19/20 league playing time(min)`)
full_data_withTimeRating$`19/20 league mean rating`<-as.double(full_data_withTimeRating$`19/20 league mean rating`)
typeof(full_data_withTimeRating$`19/20 league mean rating`)
typeof(full_data_withTimeRating$`marketvalue(€)(M)`)
####경기시간 1000시간 미만 데이터행 삭제####
full_data_withTimeRating$`19/20 league playing time(min)`<-ifelse(full_data_withTimeRating$`19/20 league playing time(min)`<1000,NA,full_data_withTimeRating$`19/20 league playing time(min)`)
####나이 20살 미만 데이터 행 삭제####
#full_data_withTimeRating$`age`<-ifelse(full_data_withTimeRating$`age`<20,NA,full_data_withTimeRating$`age`)
####결측값제거#####
sum(is.na(full_data_withTimeRating))
full_data_withTimeRating<-na.omit(full_data_withTimeRating)
summary(full_data_withTimeRating)
library(ggplot2)
library(dplyr)
library(plotly)
library(corrplot)
attach(full_data_withTimeRating)
fit<-lm(`marketvalue(€)(M)`~`19/20 league mean rating`+`19/20 league playing time(min)`)
summary(fit)
#유의하지 않은 출전시간 독립변수에서 제거
fit2<-lm(`marketvalue(€)(M)`~`19/20 league mean rating`)
summary(fit2)
plot(x=`19/20 league mean rating`,y=`marketvalue(€)(M)`)
abline(fit2,col="red")
fitted(fit2)[1:4]
fit2
fit<-lm(`marketvalue(€)(M)`~`19/20 league mean rating`+`19/20 league playing time(min)`)
summary(fit)
fitted(fit)[1:4]
cor.test(`19/20 league mean rating`,`marketvalue(€)(M)`)
cor.test(`19/20 league playing time(min)`,`marketvalue(€)(M)`)
cor.test(`age`,`marketvalue(€)(M)`)
cor.test(`age`,`19/20 league mean rating`)
cor.test(`age`,`19/20 league playing time(min)`)
cor.test(`19/20 league playing time(min)`,`marketvalue(€)(M)`)
